<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE SystemDefinition [
<!ELEMENT SystemDefinition ( systemModel )>
<!ATTLIST SystemDefinition
  name CDATA #REQUIRED
  schema CDATA #REQUIRED
>
<!-- all paths are relative to the environment variable specified by the root attribute, or SOURCEROOT if not.  -->

<!-- System Model Section of DTD -->
<!ELEMENT systemModel (layer+)>

<!ELEMENT layer (block* | collection*)*>
<!-- Kernel Services, Base Services, OS Services, Etc -->
<!ATTLIST layer
  name CDATA #REQUIRED
  long-name CDATA #IMPLIED
  levels NMTOKENS #IMPLIED
  span CDATA #IMPLIED
>

<!ELEMENT block (subblock* | collection*)*>
 <!-- Generic OS services, Comms Services, etc -->
<!ATTLIST block
  levels NMTOKENS #IMPLIED
  span CDATA #IMPLIED
  level NMTOKEN #IMPLIED
  name CDATA #REQUIRED
  long-name CDATA #IMPLIED
>

<!ELEMENT subblock (collection)*>
<!-- Cellular Baseband Services, Networking Services, etc -->
<!ATTLIST subblock
  name CDATA #REQUIRED
  long-name CDATA #IMPLIED
>

<!ELEMENT collection (component)*>
<!-- Screen Driver, Content Handling, etc -->
<!ATTLIST collection
  name CDATA #REQUIRED
  long-name CDATA #IMPLIED
  level NMTOKEN #IMPLIED
>

<!ELEMENT component (unit)*>
<!-- contains units or is a  package or prebuilt -->
<!ATTLIST component
  name CDATA #REQUIRED
  long-name CDATA #IMPLIED
  deprecated CDATA #IMPLIED
  introduced CDATA #IMPLIED
  contract CDATA #IMPLIED
  plugin (Y|N) "N"
  filter CDATA #IMPLIED
  class NMTOKENS #IMPLIED
  supports CDATA #IMPLIED
  purpose ( optional | mandatory | development ) "optional"
>

<!ELEMENT unit EMPTY >
<!-- must be buildable (bld.inf) -->
<!-- bldFile  may someday be removed in favour of mrp -->
<!ATTLIST unit
  mrp CDATA #IMPLIED
  filter CDATA #IMPLIED
  bldFile CDATA #IMPLIED
  root CDATA #IMPLIED
  version NMTOKEN #IMPLIED
  prebuilt NMTOKEN #IMPLIED
  late (Y|N) #IMPLIED
  priority CDATA #IMPLIED
>
]>
<SystemDefinition name="Symbian^3" schema="2.0.1">
  <systemModel>
    <layer name="mw" long-name="Middleware" levels="generic specific">
      <block name="serviceapifw" level="specific" long-name="Service API Framework" levels="plugin framework server generic specific">
        <collection name="rtsecuritymanager" long-name="Runtime Security Manager" level="server">
          <component name="rtsecuritymanagerutil" filter="s60" long-name="Runtime Security Manager Util">
            <unit bldFile="/sf/mw/serviceapifw/rtsecuritymanager/rtsecuritymanagerutil/group"/>
          </component>
          <component name="rtsecuritymanagerserver" filter="s60" long-name="Runtime Security Manager Server">
            <unit bldFile="/sf/mw/serviceapifw/rtsecuritymanager/rtsecuritymanagerserver/group"/>
          </component>
          <component name="rtsecuritymanagerclient" filter="s60" long-name="Runtime Security Manager Client">
            <unit bldFile="/sf/mw/serviceapifw/rtsecuritymanager/rtsecuritymanagerclient/group"/>
          </component>
          <component name="rtsecuritymanager_build" filter="s60" long-name="Runtime Security Manager Build">
            <!-- Move the export to the appropriate components, or make this a ROM component by removing the #includes -->
            <unit bldFile="/sf/mw/serviceapifw/rtsecuritymanager/group"/>
          </component>
        </collection>
        <collection name="languageinterworkingfw" long-name="Language Interworking Framework" level="framework">
          <component name="lifwservicehandler" filter="s60" long-name="Service Handler">
            <unit bldFile="/sf/mw/serviceapifw/languageinterworkingfw/servicehandler/group"/>
          </component>
        </collection>
        <collection name="serviceapifw_info" long-name="Service API Framework Info" level="specific">
          <component name="serviceapifw_plat" filter="s60" long-name="Service API Framework Platform Interfaces" class="api">
            <unit bldFile="/sf/mw/serviceapifw/serviceapifw_plat/group"/>
          </component>
          <component name="serviceapifw_pub" filter="s60" long-name="Service API Framework Public Interfaces" class="api">
            <unit bldFile="/sf/mw/serviceapifw/serviceapifw_pub/group"/>
          </component>
        </collection>
      </block>
    </layer>
  </systemModel>
</SystemDefinition>

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE SystemDefinition [
 <!ELEMENT SystemDefinition (systemModel)>
 <!ATTLIST SystemDefinition
  name CDATA #REQUIRED
  schema CDATA #REQUIRED>
 <!ELEMENT systemModel (layer+)>
 <!ELEMENT layer (block*|collection*)*>
 <!ATTLIST layer
  name CDATA #REQUIRED
  long-name CDATA #IMPLIED
  levels NMTOKENS #IMPLIED
  span CDATA #IMPLIED>
 <!ELEMENT block (subblock*|collection*)*>
 <!ATTLIST block
  levels NMTOKENS #IMPLIED
  span CDATA #IMPLIED
  level NMTOKEN #IMPLIED
  name CDATA #REQUIRED
  long-name CDATA #IMPLIED>
 <!ELEMENT subblock (collection)*>
 <!ATTLIST subblock
  name CDATA #REQUIRED
  long-name CDATA #IMPLIED>
 <!ELEMENT collection (component)*>
 <!ATTLIST collection
  name CDATA #REQUIRED
  long-name CDATA #IMPLIED
  level NMTOKEN #IMPLIED>
 <!ELEMENT component (unit)*>
 <!ATTLIST component
  name CDATA #REQUIRED
  long-name CDATA #IMPLIED
  deprecated CDATA #IMPLIED
  introduced CDATA #IMPLIED
  contract CDATA #IMPLIED
  plugin (Y|N) 'N'
  filter CDATA #IMPLIED
  class NMTOKENS #IMPLIED
  supports CDATA #IMPLIED
  purpose (optional|mandatory|development) 'optional'>
 <!ELEMENT unit EMPTY>
 <!ATTLIST unit
  mrp CDATA #IMPLIED
  filter CDATA #IMPLIED
  bldFile CDATA #IMPLIED
  root CDATA #IMPLIED
  version NMTOKEN #IMPLIED
  prebuilt NMTOKEN #IMPLIED
  late (Y|N) #IMPLIED
  priority CDATA #IMPLIED>
]>
<SystemDefinition name="Symbian^3" schema="2.0.1">
 <systemModel>
  <layer name="mw" long-name="Middleware" levels="generic specific">
   <block name="metadatasrv" level="specific" long-name="Legacy Metadata Services" levels="plugin framework server generic specific">
<collection name="metadatasrv_pub" long-name="Legacy Metadata Services Public Interfaces" level="specific">
<component name="content_listing_framework_api" long-name="Content Listing Framework API" filter="s60" class="api">
<!-- Leave commented out until confguration is in use
	unit bldFile="metadatasrv_pub/content_listing_framework_api/group"/>-->
</component>
<component name="media_fetch_api" long-name="Media Fetch API" filter="s60" class="api">
<unit bldFile="/sf/mw/metadatasrv/metadatasrv_pub/media_fetch_api/group"/>
</component>
<component name="metadatasrv_pub_build" long-name="Legacy Metadata Services Public Interface Build" filter="s60" class="api">
<!-- only needed for #ifdefs, remove when confguration is in use -->
<unit bldFile="/sf/mw/metadatasrv/metadatasrv_pub/group"/>
</component>
</collection>
<collection name="metadatasrv_plat" long-name="Legacy Metadata Services Platform Interfaces" level="specific">
<component name="media_fetch_implementation_api" long-name="Media Fetch Implementation API" filter="s60" class="api">
<unit bldFile="/sf/mw/metadatasrv/metadatasrv_plat/media_fetch_implementation_api/group"/>
</component>
<component name="content_listing_framework_collection_manager_api" long-name="Content Listing Framework Collection Manager API" filter="s60" class="api">
<!-- Leave commented out until confguration is in use
    <unit bldFile="metadatasrv_plat/content_listing_framework_collection_manager_api/group"/>-->
</component>
<component name="content_listing_framework_extended_api" long-name="Content Listing Framework Extended API" filter="s60" class="api">
<!-- Leave commented out until confguration is in use
    <unit bldFile="metadatasrv_plat/content_listing_framework_extended_api/group"/>-->
</component>
<component name="metadatasrv_plat_build" long-name="Legacy Metadata Services Platform Interface Build" filter="s60" class="api">
<!-- only needed for #ifdefs, remove when confguration is in use -->
<unit bldFile="/sf/mw/metadatasrv/metadatasrv_plat/group"/>
</component>
</collection>
<collection name="mediamanagementutilities" long-name="Media Management Utilities" level="generic">
<component name="mediafetch" filter="s60" long-name="Media Fetch">
<unit bldFile="/sf/mw/metadatasrv/mediamanagementutilities/mediafetch/group"/>
</component>
</collection>
</block>
  </layer>
 </systemModel>
</SystemDefinition>